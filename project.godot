; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node",
"class": "Item",
"language": "GDScript",
"path": "res://Items/Item/item.gd"
}, {
"base": "PanelContainer",
"class": "ItemContainer",
"language": "GDScript",
"path": "res://Window/Inventory/item_container.gd"
}, {
"base": "Area2D",
"class": "ItemDrop",
"language": "GDScript",
"path": "res://Items/Item Drop/item_drop_controller.gd"
}, {
"base": "TextureRect",
"class": "ItemInventory",
"language": "GDScript",
"path": "res://Items/Item Inventory/item_inventory_controller.gd"
}, {
"base": "KinematicBody2D",
"class": "Player",
"language": "GDScript",
"path": "res://Player/Player.gd"
}, {
"base": "Node",
"class": "State",
"language": "GDScript",
"path": "res://State Machine/state.gd"
}, {
"base": "Node",
"class": "StateMachine",
"language": "GDScript",
"path": "res://State Machine/state_machine.gd"
}, {
"base": "Control",
"class": "Window",
"language": "GDScript",
"path": "res://Window/window.gd"
}, {
"base": "Window",
"class": "WindowInventory",
"language": "GDScript",
"path": "res://Window/Inventory/window_inventory.gd"
} ]
_global_script_class_icons={
"Item": "",
"ItemContainer": "",
"ItemDrop": "",
"ItemInventory": "",
"Player": "",
"State": "",
"StateMachine": "",
"Window": "res://Window/window_icon.png",
"WindowInventory": ""
}

[application]

config/name="Mip Inventory System"
run/main_scene="res://Main.tscn"
config/icon="res://icon.png"

[input]

item_pick={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":90,"unicode":0,"echo":false,"script":null)
 ]
}

[rendering]

environment/default_environment="res://default_env.tres"
